import os, time, uuid
from flask import Flask, jsonify, request, g, Response
from flask_cors import CORS
from prometheus_client import Counter, Histogram, generate_latest, CONTENT_TYPE_LATEST

APP_NAME = os.getenv("APP_NAME", "portifolio-chat")
APP_VERSION = os.getenv("APP_VERSION", "0.1.0")
APP_ENV = os.getenv("APP_ENV", "production")

# Métricas básicas
HTTP_REQUESTS = Counter("http_requests_total", "Total HTTP requests", ["method","route","status"])
HTTP_LATENCY  = Histogram("http_request_duration_seconds", "HTTP request duration in seconds", ["method","route"])

def create_app():
    app = Flask(__name__)
    CORS(app)

    @app.before_request
    def _before():
        g.t0 = time.time()
        g.req_id = request.headers.get("X-Request-ID") or uuid.uuid4().hex

    @app.after_request
    def _after(resp):
        resp.headers["X-Request-ID"] = g.req_id
        # métricas
        route = (request.url_rule.rule if request.url_rule else request.path) or "unknown"
        HTTP_REQUESTS.labels(request.method, route, resp.status_code).inc()
        HTTP_LATENCY.labels(request.method, route).observe(time.time() - g.t0)
        return resp

    @app.get("/")
    def root():
        return jsonify(message=f"{APP_NAME} API is running", status="ok", version=APP_VERSION)

    @app.get("/status")
    def status():
        return jsonify(app=APP_NAME, version=APP_VERSION, health="healthy", env=APP_ENV)

    @app.get("/metrics")
    def metrics():
        return Response(generate_latest(), mimetype=CONTENT_TYPE_LATEST)

    return app

app = create_app()

